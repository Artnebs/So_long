==100837== Memcheck, a memory error detector
==100837== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==100837== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==100837== Command: ./so_long ./maps_test_so_long/invalid_char.ber
==100837== Parent PID: 100745
==100837== 
==100837==    by 0x114895: mlx_int_wait_first_expose (in /home/arthur/Documents/Ecole_42/tronc_commun/CERCLE_2/So_long/So_long/so_long)
==100837==    by 0x114505: mlx_new_window (in /home/arthur/Documents/Ecole_42/tronc_commun/CERCLE_2/So_long/So_long/so_long)
==100837==    by 0x110686: init_window (init_window.c:27)
==100837==    by 0x110794: init_all (main.c:31)
==100837==    by 0x110842: main (main.c:50)
==100837==  Address 0x4c431ac is 28 bytes inside a block of size 16,384 alloc'd
==100837==    by 0x1142B6: mlx_init (in /home/arthur/Documents/Ecole_42/tronc_commun/CERCLE_2/So_long/So_long/so_long)
==100837==    by 0x110220: init_mlx (init_mlx.c:23)
==100837==    by 0x110723: init_all (main.c:19)
==100837==    by 0x110842: main (main.c:50)
==100837==  Uninitialised value was created by a stack allocation
==100837==    at 0x1147A0: mlx_int_anti_resize_win (in /home/arthur/Documents/Ecole_42/tronc_commun/CERCLE_2/So_long/So_long/so_long)
==100837== 
==100837== 
==100837== HEAP SUMMARY:
==100837==     in use at exit: 0 bytes in 0 blocks
==100837==   total heap usage: 5,738 allocs, 5,738 frees, 1,824,658 bytes allocated
==100837== 
==100837== All heap blocks were freed -- no leaks are possible
==100837== 
==100837== For lists of detected and suppressed errors, rerun with: -s
==100837== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
